{"version":3,"sources":["hooks/useValidation.js","components/Step1.js","components/Student.js","hooks/useStudents.js","components/Step2.js","components/Stein.js","components/Finish.js","hooks/useSteps.js","hooks/useRegistration.js","constants.js","pages/Register.js","pages/Confirmation.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["useValidation","_useState","useState","_useState2","Object","slicedToArray","Step1","_ref","steps","registrations","addCurrentStep","step","registration","backCurrentStep","setRegistration","_useValidation","_useValidation2","validated","setValidated","addToRegistration","obj","parentInfo","objectSpread","react_default","a","createElement","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Group","controlId","Label","Control","required","placeholder","type","value","parentName","onChange","e","target","email","Row","as","Col","phone","otherPhone","address","address2","city","state","undefined","zip","ButtonGroup","Button","variant","Student","props","studentList","setStudents","handleChange","fieldName","defineProperty","Container","style","borderColor","borderWidth","borderStyle","borderRadius","padding","backgroundColor","marginTop","krName","engName","birthdate","grade","Check","paddingLeft","inline","label","name","checked","gender","fluency","religion","dietaryNotes","comments","id","classDay","useStudents","students","Step2","components_Student","onClick","marginLeft","store","SteinStore","username","password","writeToDatabase","student","append","authentication","then","res","console","log","window","location","href","catch","err","Finish","handleSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","float","useSteps","setSteps","useRegistration","currentStep","constants","Register","_useSteps","_useRegistration","_useStudents","Constants","components_Step1","components_Step2","components_Finish","Confirmation","Container_default","Home","className","src","Button_default","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","es","pages_Home","path","pages_Register","pages_Confirmation","color","fontSize","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.53e8706a.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useValidation() {\n    const [validation, setValidation] = useState(false);\n\n    return [validation, setValidation];\n}\n\nexport default useValidation;","import React from 'react';\nimport useValidation from '../hooks/useValidation';\nimport { Form, Col, Button, ButtonGroup } from 'react-bootstrap';\n\nconst Step1 = ({steps, registrations}) => {\n    const {step, addCurrentStep, backCurrentStep} = steps;\n    const {registration, setRegistration} = registrations;\n\n    const [validated, setValidated] = useValidation();\n    const handleSubmit = event => {\n        const form = event.currentTarget;\n        if (!form.checkValidity()) {\n            setValidated(true);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            setValidated(false);\n            addCurrentStep();\n        }\n      };\n    const addToRegistration = (obj) => {\n        let parentInfo = {...registration, ...obj};\n        setRegistration(parentInfo);\n    }\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <h3>Parent Information</h3>\n        <Form.Group controlId=\"formGridName\">\n            <Form.Label>성명 | Full Name *</Form.Label>\n            <Form.Control required placeholder=\"Name\" type=\"text\"\n                \n                value={\n                    registration.parentName ? registration.parentName : ''\n                }\n                onChange={e => {\n                    addToRegistration({parentName: e.target.value});\n                }}/>\n        </Form.Group>\n        <Form.Group controlId=\"formGridEmail\">\n            <Form.Label>Email *</Form.Label>\n            <Form.Control required type=\"email\" placeholder=\"Enter email\" \n                value={\n                    registration.email ? registration.email : ''\n                }\n                onChange={e => {\n                    addToRegistration({email: e.target.value});\n                }}/>\n        </Form.Group>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridPhone\">\n            <Form.Label>전화 번호 | Phone Number *</Form.Label>\n            <Form.Control required type=\"phone\" placeholder=\"Primary Phone #\" \n                value={\n                    registration.phone ? registration.phone : ''\n                }\n                onChange={e => {\n                    addToRegistration({phone: e.target.value});\n                }}/>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridPhone\">\n            <Form.Label>비상 연락 번호 | Emergency Phone Number</Form.Label>\n            <Form.Control type=\"phone\" placeholder=\"Emergency Phone #\" \n                value={\n                    registration.otherPhone ? registration.otherPhone : ''\n                }\n                onChange={e => {\n                    addToRegistration({otherPhone: e.target.value});\n                }}/>\n            </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"formGridAddress1\">\n            <Form.Label>Address *</Form.Label>\n            <Form.Control required placeholder=\"1234 Main St\" \n                value={\n                    registration.address ? registration.address : ''\n                }\n                onChange={e => {\n                    addToRegistration({address: e.target.value});\n                }}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridAddress2\">\n            <Form.Label>Address 2</Form.Label>\n            <Form.Control placeholder=\"Apartment, studio, or floor\" \n                value={\n                    registration.address2 ? registration.address2 : ''\n                }\n                onChange={e => {\n                    addToRegistration({address2: e.target.value});\n                }}/>\n        </Form.Group>\n\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridCity\">\n            <Form.Label>City *</Form.Label>\n            <Form.Control required placeholder=\"Seattle\"\n                value={\n                    registration.city ? registration.city : ''\n                }\n                onChange={e => {\n                    addToRegistration({city: e.target.value});\n                }}/>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n            <Form.Label>State</Form.Label>\n            <Form.Control as=\"select\" required\n                value={\n                    registration.state ? registration.state : undefined\n                }\n                onChange={e => {\n                    addToRegistration({state: e.target.value});\n                }}>\n                <option>Choose...</option>\n                <option>WA</option>\n                <option>Other</option>\n            </Form.Control>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n            <Form.Label>Zip *</Form.Label>\n            <Form.Control required \n                value={\n                    registration.zip ? registration.zip : ''\n                }\n                onChange={e => {\n                    addToRegistration({zip: e.target.value});\n                }}/>\n            </Form.Group>\n        </Form.Row>\n\n        <ButtonGroup>\n            <Button\n                variant=\"info\" \n                type=\"submit\"\n                >\n                Next >\n            </Button>\n        </ButtonGroup>\n    </Form>\n  )\n}\n\nexport default Step1;","import React from 'react';\nimport { Container, Form, Col, Button, ButtonGroup, Row } from 'react-bootstrap';\n\nconst Student = (props) => {\n    const {studentList, setStudents} = props;\n    const handleChange = (value, fieldName) => {\n        // let tempStudents = studentList; // [{},{},...]\n        // tempStudents = {...tempStudents, ...{[fieldName]: value}};\n        setStudents({...studentList, ...{[fieldName]: value}});\n    }\n\n  return (\n    <Container style={{\n        borderColor:'#DDDDDD', \n        borderWidth: '0.5px', \n        borderStyle:'solid', \n        borderRadius: '7px', \n        padding: '20px',\n        backgroundColor:'#F3F3F3',\n        marginTop:'10px'}}>\n    {/* <Form noValidate validated={validated}> */}\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>한글 성명 | Korean Name *</Form.Label>\n                <Form.Control required placeholder=\"Last First Name\" \n                    value={\n                        studentList.krName //!= '' ? studentList.krName : ''\n                    }\n                    onChange={e => {\n                        e.preventDefault();\n                        handleChange(e.target.value, 'krName');\n                    }} />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>영문 성명 | English Name *</Form.Label>\n                <Form.Control required placeholder=\"First Last Name\" \n                    value={\n                        studentList.engName != '' ? studentList.engName : ''\n                    }\n                    onChange={e => {\n                       // e.preventDefault();\n                        handleChange(e.target.value, 'engName');\n                    }}/>\n            </Form.Group>\n        </Form.Row> \n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridBirth\">\n                <Form.Label>Birthdate *</Form.Label>\n                <Form.Control required type=\"date\" \n                    value={\n                        studentList.birthdate != '' ? studentList.birthdate : ''\n                    }\n                    onChange={e => {\n                        handleChange(e.target.value, 'birthdate');\n                    }}/>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridGrade\">\n                <Form.Label>학년 | Grade *</Form.Label>\n                <Form.Control required as=\"select\"\n                    value={\n                        studentList.grade != '' ? studentList.grade : undefined\n                    }\n                    onChange={e => {\n                        handleChange(e.target.value, 'grade');\n                    }}>\n                    <option>Choose...</option>\n                    <option>K</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                    <option>6</option>\n                    <option>7</option>\n                    <option>8</option>\n                    <option>9</option>\n                    <option>10</option>\n                    <option>11</option>\n                    <option>12</option>\n                    <option>N/A</option>\n                </Form.Control>\n            </Form.Group>\n        </Form.Row>\n        <Form.Group>\n            <Form.Label>성별 | Gender *</Form.Label>\n            <Form.Check style={{paddingLeft:\"20px\"}}\n                required\n                inline\n                type=\"radio\"\n                label=\"F\"\n                name=\"formgender\"\n                checked={\n                    studentList.gender == 'F' ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange('F', 'gender');\n                }}/>\n            <Form.Check\n                inline\n                type=\"radio\"\n                label=\"M\"\n                name=\"formgender\"\n                checked={\n                    studentList.gender == 'M' ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange('M', 'gender');\n                }}/>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>한국어 능력 | Korean Fluency Level</Form.Label>\n                <Form.Check style={{paddingLeft:\"20px\"}}\n                    inline\n                    type=\"radio\"\n                    label=\"전혀 못함 (Not at all)\"\n                    name=\"formRadioSkill\"\n                    checked={\n                        studentList.fluency == \"전혀 못함 (Not at all)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        handleChange(\"전혀 못함 (Not at all)\", 'fluency');\n                    }}\n                />\n                <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"조금 (A little)\"\n                    name=\"formRadioSkill\" \n                    checked={\n                        studentList.fluency == \"조금 (A little)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        handleChange( \"조금 (A little)\", 'fluency');\n                    }}\n                />\n                <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"잘함 (Well)\"\n                    name=\"formRadioSkill\"\n                    checked={\n                        studentList.fluency == \"잘함 (Well)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        let fluency = {current:{value: \"잘함 (Well)\"}}\n                        handleChange(\"잘함 (Well)\", 'fluency');\n                    }}\n                />\n        </Form.Group>\n        <Form.Group controlId=\"formGridReligion\">\n            <Form.Label>종교 | Religion</Form.Label>\n            <Form.Control \n                value={\n                    studentList.religion != '' ? studentList.religion : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'religion');\n                }} />\n        </Form.Group>\n        <Form.Group controlId=\"formGridDietary\">\n            <Form.Label>음식물 규정식 사항 | Dietary Notes</Form.Label>\n            <Form.Control placeholder=\"Peanut allergy, etc\" \n                value={\n                    studentList.dietaryNotes != '' ? studentList.dietaryNotes : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'dietaryNotes');\n                }}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridNote\">\n            <Form.Label>비고 | Other comments</Form.Label>\n            <Form.Control \n                value={\n                    studentList.comments != '' ? studentList.comments : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'comments');\n                }}/>\n        </Form.Group>\n\n        <Form.Group id=\"formGridClass\">\n        <Form.Label><b>희망하는 수업일 | Day of Class *</b></Form.Label>\n            <Form.Check style={{paddingLeft:\"20px\"}}\n                required\n                inline\n                type=\"radio\"\n                label=\"금 | Friday\"\n                name=\"formRadioClass\"\n                checked={\n                    studentList.classDay == \"금\" ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange(\"금\", 'classDay');\n                }}\n            />\n            <Form.Check\n                inline\n                type=\"radio\"\n                label=\"토 | Saturday\"\n                name=\"formRadioClass\"\n                checked={\n                    studentList.classDay == \"토\" ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange(\"토\", 'classDay');\n                }}\n            />\n        </Form.Group>\n    {/* </Form> */}\n    </Container>\n  )\n}\n\nexport default Student","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport Student from '../components/Student';\n\nfunction useStudents() {\n    const [students, setStudents] = useState({\n        krName: '',\n        engName: '',\n        birthdate: '',\n        grade: '',\n        gender: '',\n        fluency: '',\n        religion: '',\n        dietaryNotes: '',\n        comments: '',\n        classDay: '',\n    });\n\n    // function addStudent() {\n    //     setStudents(students+1);\n    // }\n\n    // function removeStudent() {\n    //     setStudents(students-1);\n    // // }\n    // function getStudents(registrations) {\n    //     let s = [];\n    //     console.log(students);\n    //     for(let i=0;i<students;i++) {\n    //         console.log(\"showing student \" + i);\n    //         s.push(<Student key={i} registrations={registrations} studentCount={i}></Student>);\n    //     }\n    //     return s;\n    // }\n    return {students, setStudents};\n}\n\nexport default useStudents;","import React from 'react';\nimport { Form, Container, Button, ButtonGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport useStudents from '../hooks/useStudents';\nimport useValidation from '../hooks/useValidation';\nimport Student from './Student';\n\nconst Step2 = ({steps, studentList}) => {\n    const {step, addCurrentStep, backCurrentStep} = steps;\n    const {students, setStudents} = studentList;\n    const [validated, setValidated] = useValidation();\n\n    // const handleAdd = () => {\n    //     let curStudents = students.concat([{}]);\n    //     setStudents(curStudents);\n    //     console.log(students);\n    // }\n\n    // const handleRemove = () => {\n    //     let tempStudents = students;\n    //     tempStudents.pop();\n    //     setStudents(tempStudents);\n    // }\n    \n    const handleSubmit = event => {\n        const form = event.currentTarget;\n        if (!form.checkValidity()) {\n            setValidated(true);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            setValidated(false);\n            addCurrentStep();\n        }\n      };\n    // const getStudents = () => {\n    //     for(let i = 0; i < students.length; i++) {\n    //         console.log()\n    //         return <Student key={i} studentList={students} setStudents={setStudents} studentCount={i}></Student>\n    //     }\n    // }\n  return (\n    <div>\n        <h3>Student Information</h3>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Student studentList={students} setStudents={setStudents}></Student>\n        <div>\n        <br></br>\n        {/* <OverlayTrigger\n            key=\"right\"\n            placement=\"right\"\n            overlay={\n                <Tooltip id={'tooltip-right'}>\n                등록 추가 | Add another student \n                </Tooltip>\n                }\n        >\n        <Button  \n            onClick={e => {\n                e.preventDefault();\n                handleAdd();\n            }}\n            variant=\"outline-success\">\n            + Add\n        </Button>\n        </OverlayTrigger>\n        {\n            students > 1 && \n            <Button \n                style={{marginLeft:\"5px\"}} \n                onClick={e => {\n                    e.preventDefault();\n                    handleRemove();\n                }}\n                variant=\"outline-danger\">\n                - Remove\n            </Button>\n        } */}\n        </div>\n        <br></br>\n        <ButtonGroup>\n            <Button \n                variant=\"info\" \n                onClick={e => {\n                    e.preventDefault();\n                    backCurrentStep();\n                }}>\n                &lt; Previous\n            </Button>\n            <Button\n                style={{marginLeft:'5px'}}\n                variant=\"info\"\n                type=\"submit\" \n                >\n                Next >\n            </Button>\n        </ButtonGroup>\n        </Form>\n    </div>\n  )\n}\n\nexport default Step2;","import SteinStore from 'stein-js-client';\n\nconst store = new SteinStore(\n    \"https://api.steinhq.com/v1/storages/5d3fb20987c49c04cac13693\"\n);\nconst username = \"admin\"; //this is so bad\nconst password = \"Office925\"; //this is also super bad\n\nfunction writeToDatabase(parentInfo, student) {\n    let registration = {...parentInfo, ...student};\n    store.append(\"Database\", [registration], \n    {\n        authentication: { username: username, password: password }\n    })\n    .then(res => {\n        console.log(res);\n        {window.location.href='/confirmation'};\n    }).catch(err => {\n        console.log(err);\n        {window.location.href='/confirmation'};\n    });\n}\n\nexport default writeToDatabase;","import React from 'react';\nimport { Form, Button, ButtonGroup, Container } from 'react-bootstrap';\nimport writeToDatabase from './Stein';\nimport useValidation from '../hooks/useValidation';\n\nconst Finish = ({steps, registrations, studentList}) => {\n  const {step, addCurrentStep, backCurrentStep} = steps;\n  const {registration, setRegistration} = registrations;    \n  const {students, setStudents} = studentList;\n\n  const [validated, setValidated] = useValidation();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      setValidated(true);\n      event.stopPropagation();\n    } else {\n      setValidated(false);\n      await writeToDatabase(registration, students);\n    }\n  }; \n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Container>\n          <h3>Registration Summary</h3>\n          Registering for: {students.krName + \" (\" + students.engName + \")\"} <br/>\n          <h4>Terms and Conditions</h4>\n            한국 학교 교장 귀하 (To: Head of the School)<br/><br/>\n            저는 위의 학생을 귀교에 입학시키기를 원하며 학부모로서의 의무를 충실히 이행할 것을 서약합니다.\n            <br/>(I would like to register our child in your school and promise to support the academic & extracurricular activites of your school.) \n            <br/>\n            또한 학생들 간식준비를 위해 기꺼이 도울것을 약속합니다. \n            <br/>(I also agree to volunteer to prepare and assist during the students' snack time.)\n            <br/>\n            <br/>\n            <br/>\n        <Form.Group id=\"formGridCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"동의 합니다 (I agree with the Terms and Conditions)\" required/>\n        </Form.Group>\n        </Container>\n       \n\n          <Button \n              inline\n              variant=\"info\" \n              onClick={e => {\n                  e.preventDefault()\n                  backCurrentStep();\n              }}>\n              &lt; Previous\n          </Button>\n          <Button inline variant=\"success\" \n            style={{float:'right'}}\n            type=\"submit\"\n          //   onClick={async e =>{\n          //    e.preventDefault()\n          //  //  e.target.value = \"check\";\n          //    await handleSubmit(e);\n          //   }}\n            >\n            Submit\n          </Button>\n    </Form>\n  )\n}\n\nexport default Finish;","import { useState, useEffect } from \"react\";\n\nfunction useSteps() {\n    const [step, setSteps] = useState(1);\n\n    function addCurrentStep() {\n        setSteps(step+1);\n    }\n\n    function backCurrentStep() {\n        setSteps(step-1);\n    }\n\n    return {step, addCurrentStep, backCurrentStep};\n}\n\nexport default useSteps;","import { useState, useEffect } from \"react\";\n\nfunction useRegistration(currentStep) {\n    const [registration, setRegistration] = useState({});\n    // const [studentInfo, setStudentInfo] = useState([{}]);\n    // function addToRegistration(newInfo) {\n    //     setRegistration({...registration, ...newInfo});\n    // }\n\n    // function addStudentToRegistration(newStudentInfo) { // [{},{}]\n    //     setStudentInfo(newStudentInfo);\n    //     // let students = [];\n    //     // if(registration.students !== undefined) {\n    //     //     students = registration.students.concat(newStudentInfo);\n    //     // }\n    //    //setRegistration({...registration, ...{students: newStudentInfo}});\n    // }\n\n    return {\n        registration, \n        setRegistration\n        // addToRegistration,\n        // studentInfo,\n        // addStudentToRegistration\n    };\n}\n\nexport default useRegistration;","export default {\n    year: '2019-2020 2학기 | 2nd Semester',\n}","import React from 'react';\nimport Step1 from '../components/Step1';\nimport Step2 from '../components/Step2';\nimport Finish from '../components/Finish';\nimport useSteps from '../hooks/useSteps';\nimport useRegistration from '../hooks/useRegistration';\n\nimport { Container } from 'react-bootstrap';\nimport Constants from '../constants';\nimport useStudents from '../hooks/useStudents';\n\nconst Register = () => {\n  const {step, addCurrentStep, backCurrentStep} = useSteps();\n  const {registration, setRegistration} = useRegistration();\n  const {students, setStudents} = useStudents();\n\n  return (\n    <Container style={{marginTop:'50px'}}>\n      <h1>Registration</h1>\n      <h4>{Constants.year}</h4>\n      <br></br>\n      <Container style={{backgroundColor: '#eee', borderRadius: '7px', padding: '20px'}}>\n        {\n          step === undefined && <p>Loading...</p>\n        }\n        {\n          step === 1 && <Step1 \n            steps={{step, addCurrentStep, backCurrentStep}}\n            registrations={{registration, setRegistration}}>\n          </Step1>\n        }\n        {\n          step === 2 && <Step2  \n            steps={{step, addCurrentStep, backCurrentStep}}\n            studentList={{students, setStudents}}>\n          </Step2>\n        }\n        {\n          step === 3 && <Finish \n            steps={{step, addCurrentStep, backCurrentStep}}\n            registrations={{registration, setRegistration}}\n            studentList={{students, setStudents}}>\n          </Finish>\n        }\n      </Container>\n    </Container>\n  )\n}\n\nexport default Register;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst Confirmation = () => {\n  return (\n    <Container style={{marginTop:'50px'}}>\n        <h1>Confirmed</h1>\n        <p> 2 학기는 <strong>1/7/2020(금) 1/8/2020(토)</strong> 시작합니다.\n        <br/> 2nd Semester starts 1/7/2020(Friday) 1/8/2020(Saturday).</p>\n\n        <p>등록 해주셔서 감사합니다. 아래 주소로 우편을 이용하시거나 교무실로 직접가져오셔도 됩니다.\n        </p>\n\n        <p>Thank you for your registration.\n          You may bring your check to the first day of class at the school office or send your check through the mail. <br/>\n        <br/>Pay to the order of: \n        <br/>St. Andrew Kim Korean School \n        <br/>Address: 11700 1st Ave. NE, \n        <br/>Seattle WA 98125\n        <br/><strong>We do not accept cash.</strong></p>\n\n          <br></br>\n          Please email us at sakks10@gmail.com or call us at 206.362.2278 for any questions.\n          <br></br>\n         <p> We look forward to seeing you!</p>\n    </Container>\n  )\n}\n\nexport default Confirmation;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Constants from '../constants';\n\nconst Home = () => {\n  return (\n    <div>\n        <div className=\"jumbotron jumbotron-fluid bg-dark text-center\">\n        <div className=\"jumbotron-background\">\n            <img src=\"../students.jpg\" className=\"blur img-fluid \"/>\n        </div>\n        <div className=\"container text-white\">\n            <h1>St. Andrew Kim Korean School</h1>\n            <h2>성 김대건 한국 학교</h2><br></br>\n            <p>{Constants.year}</p>\n            <p>Now accepting registrations!</p> \n            <p>\n            <Button variant=\"primary\" href=\"/register\">등록 | Register</Button>\n            </p>\n        </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport { Router } from \"@reach/router\";\n\nimport './App.css';\nimport { Nav, Navbar, Container } from 'react-bootstrap';\nimport Register from './pages/Register';\nimport Confirmation from './pages/Confirmation';\nimport Home from './pages/Home';\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">St. Andrew Kim Korean School</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/register\">Register</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Router>\n        <Home path=\"/\"/>\n        <Register path=\"/register\" />\n        <Confirmation path=\"confirmation\"/>\n      </Router>\n      <Container style={{marginTop: '50px'}}>\n        <hr/>\n        <footer style={{color: 'gray'}}>\n          <p style={{fontSize:'13px'}}>© 2019 - St. Andrew Kim Korean School </p>\n        </footer>\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}